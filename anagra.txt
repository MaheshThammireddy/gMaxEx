
#define STR_SIZE 20
#define MAX_STRING 100
#define NO_OF_CHARS 256

typedef struct _node{
    
    char str[STR_SIZE];
    int hash;
    int count;
    
}node;

node data[MAX_STRING];

int areAnagram(char* str1, char* str2)
{
    
    int count[NO_OF_CHARS] = {0};
    int i;
 
    
    for (i = 0; str1[i] && str2[i];  i++)
    {
        count[str1[i]]++;
        count[str2[i]]--;
    }
 
    
    if (str1[i] || str2[i])
      return 0;
 
    
    for (i = 0; i < NO_OF_CHARS; i++)
        if (count[i])
            return 0;
     return 1;
}

int count[MAX_STRING]={0};

void findAllAnagrams(char arr[][30], int n)
{
    for (int i = 0; i < n; i++)
        for (int j = i+1; j < n; j++)
            if (areAnagram(arr[i], arr[j])){
                count[i]++;
                count[j]++;
            }
            
            
    for(int k=0;k<n;k++)
        printf("count[%d] : %d\n",k,count[k]);
                
}

/* Driver program to test to pront printDups*/
int main()
{
    char arr[][30] = {"geeksquiz", "geeksforgeeks", "abcd", 
                    "forgeeksgeeks", "zuiqkeegs","cat","tac","atc"};
    int n = sizeof(arr)/sizeof(arr[0]);
    findAllAnagrams(&arr, n);
    return 0;
}


